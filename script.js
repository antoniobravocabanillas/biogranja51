// ==========================

document.addEventListener("DOMContentLoaded", () => {
  const burger = document.querySelector(".burger"); // bot√≥n del men√∫
  const nav = document.querySelector(".nav-links"); // contenedor del men√∫
  const navLinks = document.querySelectorAll(".nav-links a"); // todos los links

  // Toggle para abrir/cerrar
  burger.addEventListener("click", () => {
    nav.classList.toggle("active");
  });

  // Al hacer click en un link -> cierra el men√∫
  navLinks.forEach(link => {
    link.addEventListener("click", () => {
      nav.classList.remove("active");
    });
  });
});
// Productos con peso opcional
// ==========================
const products = [
  {
    name: "Pollo tierno (30 d√≠as)",
    subName: "Natural, nutritivo y lleno de sabor.",
    price: 13,
    weight: 3,
    img: "/img/productos/pollo/pollo-tierno.jpg",
    benefits0: "üíß Agua purificada ‚Üí carne m√°s limpia y segura",
    benefits1: "üå± Sin hormonas ni qu√≠micos",
    benefits2: "üç≤ Suave y jugoso, ideal para caldos y guisos",
    benefits3: "üí™ Alto en prote√≠na magra",
    desc: "Pollo joven, ideal para un sabor suave y nutritivo."
  },
  {
    name: "Pollo cl√°sico (45 d√≠as)",
    subName: "Sabor balanceado para toda la familia.",
    price: 11,
    weight: 4,
    img: "/img/productos/pollo/pollo-clasico.jpg",
    benefits0: "üë®‚Äçüë©‚Äçüëß Ideal para preparaciones familiares",
    benefits1: "üçó Carne equilibrada: jugosa pero firme",
    benefits2: "üå± Criado de manera natural sin qu√≠micos",
    benefits3: "üí™ Buena fuente de prote√≠nas y vitaminas del grupo B",
    desc: "Sabor balanceado, ideal para toda la familia."
  },
  {
    name: "Pollo robusto (60 d√≠as)",
    subName: "M√°s carne, m√°s sabor.",
    price: 10,
    weight: 5,
    img: "/img/productos/pollo/pollo-robusto.jpg",
    benefits0: "üçñ Mayor rendimiento en cortes grandes",
    benefits1: "üî• Ideal para parrillas, hornos y recetas gourmet",
    benefits2: "üí™ Alto contenido proteico con textura firme",
    benefits3: "üå± Criado naturalmente, sin aceleradores de crecimiento",
    desc: "M√°s carne y sabor intenso para cortes premium."
  },
  {
    name: "Pechuga",
    subName: "Ligera, nutritiva y vers√°til.",
    price: 18.9,
    img: "/img/productos/pollo/pechugas.jpg",
    benefits0: "üí™ Baja en grasa, rica en prote√≠na magra",
    benefits1: "ü•ó Ideal para dietas fitness y saludables",
    benefits2: "üç≥ Vers√°til: salteados, a la plancha o ensaladas",
    benefits3: "üå± Libre de qu√≠micos y hormonas",
    desc: "Pechuga magra y saludable."
  },
  {
    name: "Pata Muslo",
    subName: "Jugoso y lleno de sabor.",
    price: 14.9,
    img: "/img/productos/pollo/muslo.jpg",
    benefits0: "üçó Carne m√°s jugosa y sabrosa",
    benefits1: "üî• Perfecto para guisos, horno o parrilla",
    benefits2: "üí™ Aporta prote√≠nas, hierro y zinc",
    benefits3: "üå± Criado naturalmente sin hormonas",
    desc: "Muslo carnoso y sabroso."
  },
  {
    name: "Alitas",
    subName: "Para compartir y disfrutar.",
    price: 12.5,
    img: "/img/productos/pollo/alitas.webp",
    benefits0: "üî• Ideales para BBQ, frituras y snacks",
    benefits1: "üç∫ Perfecto acompa√±amiento en reuniones",
    benefits2: "üçó Carne tierna con piel crujiente",
    benefits3: "üå± Criadas sin qu√≠micos, sabor aut√©ntico",
    desc: "Perfectas para aperitivos o BBQ."
  },
  {
    name: "Patas",
    subName: "Tradici√≥n en tu mesa.",
    price: 6,
    img: "/img/productos/pollo/patas.jpg",
    benefits0: "üç≤ Ricas en col√°geno natural",
    benefits1: "ü¶¥ Fortalece articulaciones y huesos",
    benefits2: "üåø Usadas en caldos medicinales y tradicionales",
    benefits3: "üå± 100% naturales y frescas",
    desc: "Para caldos y recetas tradicionales."
  },
  {
    name: "Cuy entero joven",
    subName: "Nutrici√≥n ancestral en tu mesa.",
    price: 40,
    img: "/img/productos/cuy/cuy-entero-joven.png",
    benefits0: "üí™ Rico en prote√≠nas de alta calidad",
    benefits1: "‚ù§Ô∏è Bajo en grasa y colesterol",
    benefits2: "üåø Carne recomendada en dietas m√©dicas tradicionales",
    benefits3: "ü•ò Ideal para recetas t√≠picas andinas",
    desc: "Cuy fresco, nutritivo y tradicional."
  },
  {
    name: "Pulpa de cuy desmenuzada",
    subName: "Practicidad y nutrici√≥n.",
    price: 26,
    img: "/img/productos/cuy/pulpa_cuy.jpg",
    benefits0: "‚ö° Lista para usar en guisos y pastas",
    benefits1: "üí™ Rica en prote√≠nas y baja en grasa",
    benefits2: "ü•ò Ideal para cocina r√°pida y saludable",
    benefits3: "üå± Natural y sin aditivos",
    desc: "Ideal para guisos y recetas r√°pidas."
  },
  {
    name: "Hamburguesa de cuy",
    subName: "Innovaci√≥n con tradici√≥n.",
    price: 20,
    img: "/img/productos/cuy/hamburguesa_cuy.jpg",
    benefits0: "üçî Alternativa saludable a la hamburguesa convencional",
    benefits1: "üí™ Aporta prote√≠nas y amino√°cidos esenciales",
    benefits2: "üå± Menos grasa y colesterol",
    benefits3: "üî• Listas para preparar y disfrutar",
    desc: "Sabroso y saludable."
  },
  {
    name: "Compost org√°nico",
    subName: "De la granja a tu tierra.",
    price: 15,
    img: "/img/productos/compost/compost.webp",
    benefits0: "üå± 100% natural y sostenible",
    benefits1: "üåø Enriquece el suelo con nutrientes esenciales",
    benefits2: "‚ôªÔ∏è Reutiliza los subproductos de la granja",
    benefits3: "üåç Contribuye a un ciclo agr√≠cola responsable",
    desc: "Fertilizante natural 100% sostenible."
  }
];


let cart = JSON.parse(localStorage.getItem("cart")) || [];
const itemsPerPage = 8;
let currentPage = 1;

// ==========================
// Notificaciones
// ==========================
function showToast(message, type = "success") {
  const container = document.getElementById("toast-container");
  const toast = document.createElement("div");
  toast.className = `toast ${type}`;
  toast.textContent = message;
  container.appendChild(toast);
  setTimeout(() => toast.remove(), 3000);
}

// ==========================
// Render productos
// ==========================
function renderProducts() {
  const container = document.getElementById("products-container");
  container.innerHTML = "";
  const start = (currentPage - 1) * itemsPerPage;
  const end = start + itemsPerPage;
  const paginatedItems = products.slice(start, end);

  paginatedItems.forEach(p => {
    const card = document.createElement("div");
    card.classList.add("product-card");

    const priceLabel = p.weight
      ? `S/ ${p.price.toFixed(2)} x Kg (‚âà ${p.weight} Kg)`
      : `S/ ${p.price.toFixed(2)}`;

    card.innerHTML = `
      <div class="card-inner">
        <div class="card-front">
          <img src="${p.img}" alt="${p.name}">
          <h4>${p.name}</h4>
          <p><strong>${p.subName}</strong></p><br>
          <p>${priceLabel}</p>
        </div>
        <div class="card-back">
          <h3>${p.name}</h3>
          <p>${p.desc}</p>
          <ul style="text-align: left; padding-left: 20px; list-style-type: none;">
            <li>${p.benefits0}</li>
            <li>${p.benefits1}</li>
            <li>${p.benefits2}</li>
            <li>${p.benefits3}</li>
          </ul>
          <button onclick="addToCart('${p.name}')">Agregar al Carrito</button>
        </div>
      </div>
    `;

    container.appendChild(card);
  });

  // üëâ aqu√≠ activamos los eventos de flip SOLO en m√≥vil
  if (window.innerWidth <= 768) {
    const cards = document.querySelectorAll(".product-card");

    cards.forEach(card => {
      card.addEventListener("click", () => {
        cards.forEach(c => {
          if (c !== card) c.classList.remove("flipped");
        });
        card.classList.toggle("flipped");
      });

      let startX = 0;
      card.addEventListener("touchstart", e => {
        startX = e.touches[0].clientX;
      });
      card.addEventListener("touchend", e => {
        const endX = e.changedTouches[0].clientX;
        if (Math.abs(startX - endX) > 50) {
          card.classList.remove("flipped");
        }
      });
    });
  }

  renderPagination();
}


function renderPagination() {
  const pagination = document.getElementById("pagination");
  pagination.innerHTML = "";
  const totalPages = Math.ceil(products.length / itemsPerPage);
  for (let i = 1; i <= totalPages; i++) {
    const btn = document.createElement("button");
    btn.textContent = i;
    if (i === currentPage) btn.style.opacity = 0.6;
    btn.addEventListener("click", () => {
      currentPage = i;
      renderProducts();
    });
    pagination.appendChild(btn);
  }
}

// ==========================
// Carrito
// ==========================
function saveCart() {
  localStorage.setItem("cart", JSON.stringify(cart));
}

function addToCart(name) {
  const product = products.find(p => p.name === name);
  if (!product) return;

  let item = cart.find(p => p.name === name);
  if (item) {
    item.quantity++;
    showToast(`+1 ${name} agregado al carrito üõí`);
  } else {
    cart.push({
      ...product,
      quantity: 1
    });
    showToast(`${name} agregado al carrito üõí`);
  }
  updateCartCount();
  saveCart();
}

function changeQuantity(name, delta) {
  let item = cart.find(p => p.name === name);
  if (!item) return;
  item.quantity += delta;

  if (delta > 0) showToast(`+1 ${name} agregado üõí`);
  else showToast(`-1 ${name} eliminado ‚ùå`, "error");

  if (item.quantity <= 0) {
    cart = cart.filter(p => p.name !== name);
    showToast(`${name} eliminado del carrito ‚ùå`, "error");
  }

  renderCartItems();
  updateCartCount();
  saveCart();
}

function updateCartCount() {
  document.getElementById("cart-count").textContent = cart.reduce((sum, i) => sum + i.quantity, 0);
}

// ==========================
// Overlay carrito
// ==========================
function openCart() {
  renderCartItems();
  document.getElementById("cartOverlay").style.display = "flex";
}

function closeCart() {
  document.getElementById("cartOverlay").style.display = "none";
}

function renderCartItems() {
  const cartItems = document.getElementById("cartItems");
  const cartTotal = document.getElementById("cartTotal");
  cartItems.innerHTML = "";
  let total = 0;

  cart.forEach(item => {
    const unitTotal = item.weight ? item.price * item.weight : item.price;
    const subtotal = unitTotal * item.quantity;
    total += subtotal;

    let detail = "";
    if (item.weight) {
      const totalKg = item.weight * item.quantity;
      detail = `
        <strong>${item.quantity} x ${item.name}</strong><br>
        Peso total ‚âà ${totalKg} Kg<br>
        Precio: S/ ${item.price.toFixed(2)} x Kg<br>
        Subtotal: S/ ${subtotal.toFixed(2)}
      `;
    } else {
      detail = `
        <strong>${item.quantity} x ${item.name}</strong><br>
        Precio unitario: S/ ${item.price.toFixed(2)}<br>
        Subtotal: S/ ${subtotal.toFixed(2)}
      `;
    }

    const li = document.createElement("li");
    li.innerHTML = `
      <div>${detail}</div>
      <div class="qty-control">
        <button onclick="changeQuantity('${item.name}', -1)">‚Äì</button>
        <span>${item.quantity}</span>
        <button onclick="changeQuantity('${item.name}', 1)">+</button>
      </div>
    `;
    cartItems.appendChild(li);
  });

  cartTotal.textContent = `Total: S/ ${total.toFixed(2)} (precio aproximado)`;
}

// ==========================
// Checkout WhatsApp
// ==========================
document.getElementById("checkoutBtn").addEventListener("click", () => {
  if (!cart.length) {
    alert("Carrito vac√≠o");
    return;
  }

  let message = "üìã *Detalle de Pedido:*\n\n";

  cart.forEach(i => {
    const unitTotal = i.weight ? i.price * i.weight : i.price;
    const subtotal = unitTotal * i.quantity;

    if (i.weight) {
      const totalKg = i.weight * i.quantity;
      message += `‚Ä¢ ${i.quantity} x ${i.name}\n`;
      message += `  Peso total: ‚âà ${totalKg} Kg\n`;
      message += `  Precio: S/ ${i.price.toFixed(2)} x Kg\n`;
      message += `  Subtotal: S/ ${subtotal.toFixed(2)}\n\n`;
    } else {
      message += `‚Ä¢ ${i.quantity} x ${i.name}\n`;
      message += `  Precio unitario: S/ ${i.price.toFixed(2)}\n`;
      message += `  Subtotal: S/ ${subtotal.toFixed(2)}\n\n`;
    }
  });

  const total = cart.reduce((sum, i) =>
    sum + (i.weight ? i.price * i.weight : i.price) * i.quantity, 0);

  message += `===========================\n`;
  message += `üí∞ *Total a pagar:* S/ ${total.toFixed(2)} (precio aproximado)\n\n`;

  message += `üìù *Datos del cliente:*\n`;
  message += `- Nombre completo: __________________\n`;
  message += `- M√©todo de pago (Efectivo / Transferencia / Yape / Plin): __________________\n`;
  message += `- ¬øDireccion de entrega si es con delivery?: __________________\n`;
  message += `- ¬øRequiere Factura o Boleta?: __________________\n`;

  // limpiar carrito despu√©s de enviar
  localStorage.removeItem("cart");
  cart = [];
  updateCartCount();
  renderCartItems();

  window.open(`https://wa.me/51936198468?text=${encodeURIComponent(message)}`, "_blank");
});



// =========================CARD FLIPPED MOVIL

// Inicializar
// ==========================
renderProducts();
updateCartCount();